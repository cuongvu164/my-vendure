{"version":3,"sources":["components/Navbar/navbar.tsx","components/Product/product.tsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","react_default","a","createElement","Fragment","id","style","zIndex","className","dist","to","title","Product","App","navbar","react_router_dist","path","element","product","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"6MAiCeA,EA3BA,WACb,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YAAYC,MAAO,CAACC,OAAO,IACjCN,EAAAC,EAAAC,cAAA,MAAIK,UAAU,QACZP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,YACZP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,IAAIC,MAAM,YAAnB,SAEFV,EAAAC,EAAAC,cAAA,MAAIK,UAAU,YACZP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,WAAWC,MAAM,WAA1B,YAEFV,EAAAC,EAAAC,cAAA,MAAIK,UAAU,YACZP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEFT,EAAAC,EAAAC,cAAA,MAAIK,UAAU,YACZP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,aAAT,aAEFT,EAAAC,EAAAC,cAAA,MAAIK,UAAU,YACZP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,YAAT,gBCdGE,EARC,WACd,OACEX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BCaSU,MATf,WACE,OACEZ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAAShB,EAAAC,EAAAC,cAACe,EAAD,UCDvBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCADY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnC,EAAAC,EAAAC,cAACF,EAAAC,EAAMmC,WAAP,KACEpC,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACmC,EAAD,SAQNnB","file":"static/js/main.5ba8070b.chunk.js","sourcesContent":["import React from 'react';\nimport  {\n  Link,\n  Route\n} from 'react-router-dom'\n\nconst Navbar = () => {\n  return (\n    <>\n      <div id=\"main-menu\" style={{zIndex:1}}>\n        <ul className=\"menu\">\n          <li className=\"dropdown\">\n            <Link to=\"/\" title=\"Homepage\">Home</Link>\n          </li>\n          <li className=\"dropdown\">\n            <Link to=\"/product\" title=\"Product\">Product</Link>\n          </li>\n          <li className=\"dropdown\">\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n          <li className=\"dropdown\">\n            <Link to=\"/about-us\">About Us</Link>\n          </li>\n          <li className=\"dropdown\">\n            <Link to=\"/contact\">Contact</Link>\n          </li>\n        </ul>\n      </div>\n\n    </>\n  );\n};\n\nexport default Navbar;","import React from 'react'\n\nconst Product = () => {\n  return (\n    <div>\n      <h1>Product</h1>\n    </div>\n  )\n}\n\nexport default Product","import React from 'react';\nimport Navbar from './components/Navbar'\nimport Product from './components/Product';\n\nimport  {\n  Route\n} from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Route path=\"/product\" element={<Product/>}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}